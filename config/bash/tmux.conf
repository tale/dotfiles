set -g prefix C-space                     # Set prefix to C-space
set -g default-command "${SHELL} -li"     # Force tmux to use login shell
set -g default-terminal "screen-256color" # We live in a modern world
set -g history-limit 50000                # Set history limit to 10000
set -g mode-keys vi                       # Vim keybindings for mode
set -g base-index 1                       # Windows start at index 1
set -g pane-base-index 1                  # Panes start at index 1
set -g renumber-windows on                # Renumber windows when one is closed

set -g escape-time 0                      # Fix delay for vim mode
set -g focus-events on                    # Enable focus events for vim
set -g set-titles on                      # Enable window titles
set -g set-titles-string "#W"             # Set window title format
set -sa terminal-overrides ",xterm*:Tc"   # Fix vim background color

# https://github.com/LnL7/nix-darwin/issues/391
set-environment -g __NIX_DARWIN_SET_ENVIRONMENT_DONE ""

set -g status-right ""
set -g status-left-length 100
set -g pane-border-style "fg=#444444"
set -g pane-active-border-style "fg=#444444"
set -g status-style "fg=#babbbd,bg=default"
set -g status-left "#[fg=#ffffff,bg=#0969da] #S "
setw -g window-status-format "#[fg=#babbbd] #I. #W "
setw -g window-status-current-format "#[fg=#ffffff,bg=#090a0b] #I. #W "

bind n popup -EE -w 60% -h 60% "$dd/config/bash/sessionize.sh" # Session Launcher
bind g popup -EE -w 90% -h 90% -d "#{pane_current_path}" "nvim +NeogitThenQuit" # Git

bind t new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind x split-window -v -c "#{pane_current_path}"
bind q kill-pane

# Tmux and Neovim integration (https://github.com/aserowy/tmux.nvim)
is_vim="ps -o 'state= -o comm=' -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'C-M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'C-M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'C-M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'C-M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 5'

